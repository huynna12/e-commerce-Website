# Generated by Django 5.2.1 on 2025-07-05 20:45

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(db_index=True, max_length=100)),
                ('item_summary', models.CharField(default='Product summary', help_text='Short summary for listings and search results', max_length=200)),
                ('item_desc', models.TextField(default='Product description', help_text='Detailed product description', max_length=2000)),
                ('technical_specs', models.JSONField(blank=True, default=dict, help_text='Technical specifications as key-value pairs')),
                ('item_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('item_quantity', models.PositiveIntegerField(default=0)),
                ('item_image', models.ImageField(default='item_images/default.png', upload_to='item_images/')),
                ('item_images', models.JSONField(blank=True, default=list, help_text='Additional image URLs')),
                ('item_category', models.CharField(choices=[('electronics', 'Electronics & Tech'), ('clothing', 'Clothing & Fashion'), ('home_kitchen', 'Home & Kitchen'), ('books_media', 'Books & Media'), ('sports_outdoors', 'Sports & Outdoors'), ('beauty_personal', 'Beauty & Personal Care'), ('toys_games', 'Toys & Games'), ('automotive', 'Automotive & Tools'), ('health_wellness', 'Health & Wellness'), ('jewelry_accessories', 'Jewelry & Accessories'), ('baby_kids', 'Baby & Kids'), ('pet_supplies', 'Pet Supplies'), ('office_supplies', 'Office & School Supplies'), ('collectibles', 'Collectibles & Art'), ('other', 'Other')], db_index=True, default='other', max_length=50)),
                ('custom_category', models.CharField(blank=True, help_text="Custom category when 'Other' selected", max_length=100)),
                ('item_sku', models.CharField(blank=True, max_length=50, unique=True)),
                ('item_origin', models.CharField(default='Unknown', max_length=100)),
                ('item_condition', models.CharField(choices=[('new', 'New'), ('used', 'Used'), ('refurbished', 'Refurbished')], default='new', max_length=20)),
                ('item_weight', models.DecimalField(blank=True, decimal_places=2, help_text='Weight in kg', max_digits=8, null=True)),
                ('item_dimensions', models.JSONField(blank=True, default=dict, help_text='Dimensions as {length, width, height} in cm')),
                ('is_featured', models.BooleanField(db_index=True, default=False)),
                ('is_available', models.BooleanField(db_index=True, default=True)),
                ('is_on_sale', models.BooleanField(db_index=True, default=False)),
                ('is_digital', models.BooleanField(default=False, help_text='Digital product (no shipping required)')),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, help_text='Sale price (must be lower than regular price)', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('sale_start_date', models.DateTimeField(blank=True, null=True)),
                ('sale_end_date', models.DateTimeField(blank=True, null=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('times_purchased', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, help_text='Optional review comment')),
                ('is_verified_purchase', models.BooleanField(default=False, help_text='Review from verified buyer')),
                ('helpful_count', models.PositiveIntegerField(default=0, help_text='How many users found this review helpful')),
                ('seller_response', models.TextField(blank=True, help_text="Seller's response to this review")),
                ('response_date', models.DateTimeField(blank=True, help_text='When seller responded', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='items.item')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
